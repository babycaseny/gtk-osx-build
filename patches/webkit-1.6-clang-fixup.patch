--- a/Source/JavaScriptCore/heap/Handle.h	2011-09-26 13:54:57.000000000 -0700
+++ b/Source/JavaScriptCore/heap/Handle.h	2013-11-23 13:53:03.000000000 -0800
@@ -113,7 +113,7 @@

 template <typename T> class Handle : public HandleBase, public HandleConverter<Handle<T>, T> {
 public:
-    template <typename A, typename B> friend class HandleConverter;
+    template <typename A, typename B> friend struct HandleConverter;
     typedef typename HandleTypes<T>::ExternalType ExternalType;
     template <typename U> Handle(Handle<U> o)
     {
--- a/Source/JavaScriptCore/wtf/NullPtr.h	2011-09-26 13:54:57.000000000 -0700
+++ b/Source/JavaScriptCore/wtf/NullPtr.h	2013-11-23 12:59:36.000000000 -0800
@@ -46,7 +46,9 @@
 namespace std {
     class nullptr_t { };
 }
-
+#if defined nullptr
+#undef nullptr
+#endif
 extern std::nullptr_t nullptr;

 #endif
--- a/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.h	2011-09-26 13:55:00.000000000 -0700
+++ b/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.h	2014-01-05 16:59:44.000000000 -0800
@@ -32,7 +32,7 @@

 namespace WebCore {

-class GraphicsContextState;
+struct GraphicsContextState;

 // Much like PlatformContextSkia in the Skia port, this class holds information that
 // would normally be private to GraphicsContext, except that we want to allow access
